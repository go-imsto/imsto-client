// Code generated by protoc-gen-go. DO NOT EDIT.
// source: imsto.proto

package impb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FetchInput struct {
	ApiKey               string   `protobuf:"bytes,1,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	Uri                  string   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Referer              string   `protobuf:"bytes,3,opt,name=referer,proto3" json:"referer,omitempty"`
	Roof                 string   `protobuf:"bytes,4,opt,name=roof,proto3" json:"roof,omitempty"`
	UserID               int64    `protobuf:"varint,5,opt,name=userID,proto3" json:"userID,omitempty"`
	SizeOp               string   `protobuf:"bytes,6,opt,name=sizeOp,proto3" json:"sizeOp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchInput) Reset()         { *m = FetchInput{} }
func (m *FetchInput) String() string { return proto.CompactTextString(m) }
func (*FetchInput) ProtoMessage()    {}
func (*FetchInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc4ef999971de385, []int{0}
}

func (m *FetchInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchInput.Unmarshal(m, b)
}
func (m *FetchInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchInput.Marshal(b, m, deterministic)
}
func (m *FetchInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchInput.Merge(m, src)
}
func (m *FetchInput) XXX_Size() int {
	return xxx_messageInfo_FetchInput.Size(m)
}
func (m *FetchInput) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchInput.DiscardUnknown(m)
}

var xxx_messageInfo_FetchInput proto.InternalMessageInfo

func (m *FetchInput) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *FetchInput) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *FetchInput) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

func (m *FetchInput) GetRoof() string {
	if m != nil {
		return m.Roof
	}
	return ""
}

func (m *FetchInput) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *FetchInput) GetSizeOp() string {
	if m != nil {
		return m.SizeOp
	}
	return ""
}

type ImageInput struct {
	ApiKey               string   `protobuf:"bytes,1,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	Image                []byte   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Roof                 string   `protobuf:"bytes,4,opt,name=roof,proto3" json:"roof,omitempty"`
	UserID               int64    `protobuf:"varint,5,opt,name=userID,proto3" json:"userID,omitempty"`
	SizeOp               string   `protobuf:"bytes,6,opt,name=sizeOp,proto3" json:"sizeOp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageInput) Reset()         { *m = ImageInput{} }
func (m *ImageInput) String() string { return proto.CompactTextString(m) }
func (*ImageInput) ProtoMessage()    {}
func (*ImageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc4ef999971de385, []int{1}
}

func (m *ImageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInput.Unmarshal(m, b)
}
func (m *ImageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInput.Marshal(b, m, deterministic)
}
func (m *ImageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInput.Merge(m, src)
}
func (m *ImageInput) XXX_Size() int {
	return xxx_messageInfo_ImageInput.Size(m)
}
func (m *ImageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInput.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInput proto.InternalMessageInfo

func (m *ImageInput) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *ImageInput) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ImageInput) GetRoof() string {
	if m != nil {
		return m.Roof
	}
	return ""
}

func (m *ImageInput) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ImageInput) GetSizeOp() string {
	if m != nil {
		return m.SizeOp
	}
	return ""
}

type ImageMeta struct {
	Width                int32    `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Quality              int32    `protobuf:"varint,3,opt,name=quality,proto3" json:"quality,omitempty"`
	Size                 int32    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Ext                  string   `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`
	Mime                 string   `protobuf:"bytes,6,opt,name=mime,proto3" json:"mime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageMeta) Reset()         { *m = ImageMeta{} }
func (m *ImageMeta) String() string { return proto.CompactTextString(m) }
func (*ImageMeta) ProtoMessage()    {}
func (*ImageMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc4ef999971de385, []int{2}
}

func (m *ImageMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageMeta.Unmarshal(m, b)
}
func (m *ImageMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageMeta.Marshal(b, m, deterministic)
}
func (m *ImageMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageMeta.Merge(m, src)
}
func (m *ImageMeta) XXX_Size() int {
	return xxx_messageInfo_ImageMeta.Size(m)
}
func (m *ImageMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ImageMeta proto.InternalMessageInfo

func (m *ImageMeta) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ImageMeta) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ImageMeta) GetQuality() int32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *ImageMeta) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ImageMeta) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

func (m *ImageMeta) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

type ImageOutput struct {
	Path                 string     `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Uri                  string     `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Host                 string     `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	ID                   string     `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`
	Meta                 *ImageMeta `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImageOutput) Reset()         { *m = ImageOutput{} }
func (m *ImageOutput) String() string { return proto.CompactTextString(m) }
func (*ImageOutput) ProtoMessage()    {}
func (*ImageOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc4ef999971de385, []int{3}
}

func (m *ImageOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageOutput.Unmarshal(m, b)
}
func (m *ImageOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageOutput.Marshal(b, m, deterministic)
}
func (m *ImageOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageOutput.Merge(m, src)
}
func (m *ImageOutput) XXX_Size() int {
	return xxx_messageInfo_ImageOutput.Size(m)
}
func (m *ImageOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ImageOutput proto.InternalMessageInfo

func (m *ImageOutput) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ImageOutput) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ImageOutput) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ImageOutput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ImageOutput) GetMeta() *ImageMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*FetchInput)(nil), "impb.FetchInput")
	proto.RegisterType((*ImageInput)(nil), "impb.ImageInput")
	proto.RegisterType((*ImageMeta)(nil), "impb.ImageMeta")
	proto.RegisterType((*ImageOutput)(nil), "impb.ImageOutput")
}

func init() {
	proto.RegisterFile("imsto.proto", fileDescriptor_bc4ef999971de385)
}

var fileDescriptor_bc4ef999971de385 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x49, 0x9b, 0x14, 0x32, 0x45, 0x50, 0x2c, 0x84, 0x2c, 0x4e, 0x55, 0xb8, 0xf4, 0x94,
	0x43, 0x79, 0x03, 0x54, 0x21, 0x45, 0x08, 0x15, 0xb9, 0x37, 0x6e, 0x6e, 0x99, 0x34, 0x46, 0x75,
	0x1d, 0x1c, 0x07, 0x5a, 0xc4, 0x2b, 0x70, 0x59, 0xed, 0x03, 0xaf, 0x66, 0x92, 0x6c, 0xf7, 0x50,
	0xed, 0x69, 0x6f, 0xff, 0x3f, 0x19, 0x7b, 0xbe, 0x8c, 0x7f, 0x98, 0x1a, 0xdb, 0x04, 0x97, 0xd7,
	0xde, 0x05, 0x27, 0x62, 0x63, 0xeb, 0x6d, 0x76, 0x1b, 0x01, 0x7c, 0xc6, 0xb0, 0xab, 0x8a, 0x63,
	0xdd, 0x06, 0xf1, 0x0e, 0x26, 0xba, 0x36, 0x5f, 0xf0, 0x2c, 0xa3, 0x79, 0xb4, 0x48, 0x55, 0xef,
	0xc4, 0x0c, 0xc6, 0xad, 0x37, 0x72, 0xc4, 0x45, 0x92, 0x42, 0xc2, 0x73, 0x8f, 0x25, 0x7a, 0xf4,
	0x72, 0xcc, 0xd5, 0xc1, 0x0a, 0x01, 0xb1, 0x77, 0xae, 0x94, 0x31, 0x97, 0x59, 0xd3, 0xbd, 0x6d,
	0x83, 0xbe, 0x58, 0xc9, 0x64, 0x1e, 0x2d, 0xc6, 0xaa, 0x77, 0x54, 0x6f, 0xcc, 0x5f, 0x5c, 0xd7,
	0x72, 0xd2, 0xcd, 0xeb, 0x5c, 0x76, 0x13, 0x01, 0x14, 0x56, 0xef, 0xf1, 0x71, 0xac, 0xb7, 0x90,
	0x18, 0xea, 0x62, 0xb0, 0x97, 0xaa, 0x33, 0x04, 0x70, 0xd4, 0x16, 0x7b, 0x2e, 0xd6, 0x4f, 0x02,
	0xf5, 0x3f, 0x82, 0x94, 0xa1, 0xbe, 0x62, 0xd0, 0x34, 0xfb, 0x8f, 0xf9, 0x11, 0x2a, 0x46, 0x4a,
	0x54, 0x67, 0xe8, 0x6c, 0x85, 0x66, 0x5f, 0x05, 0x46, 0x4a, 0x54, 0xef, 0x68, 0x5d, 0xbf, 0x5a,
	0x7d, 0x30, 0xe1, 0xcc, 0x58, 0x89, 0x1a, 0x2c, 0x91, 0xd1, 0xfd, 0x4c, 0x96, 0x28, 0xd6, 0xb4,
	0x6e, 0x3c, 0x05, 0xc6, 0x4a, 0x15, 0x49, 0xea, 0xb2, 0xc6, 0x62, 0x4f, 0xc4, 0x3a, 0xfb, 0x07,
	0x53, 0xc6, 0x59, 0xb7, 0x81, 0x96, 0x24, 0x20, 0xae, 0x75, 0xcf, 0x93, 0x2a, 0xd6, 0x57, 0xde,
	0x4d, 0x40, 0x5c, 0xb9, 0x26, 0x0c, 0xcb, 0x21, 0x2d, 0x5e, 0xc1, 0xa8, 0x58, 0xf5, 0xab, 0x19,
	0x15, 0x2b, 0xf1, 0x01, 0x62, 0x8b, 0x41, 0xf3, 0xfc, 0xe9, 0xf2, 0x75, 0x4e, 0x49, 0xc9, 0xef,
	0xff, 0x5c, 0xf1, 0xc7, 0xe5, 0x4f, 0x78, 0xc1, 0xa5, 0xcd, 0xef, 0x9d, 0xc8, 0x21, 0xe1, 0x10,
	0x89, 0x59, 0xd7, 0x7b, 0x49, 0xd4, 0xfb, 0x37, 0x0f, 0x4e, 0x77, 0xa0, 0xd9, 0x33, 0xea, 0xdf,
	0x04, 0xe7, 0x71, 0xe8, 0xbf, 0x3c, 0xf5, 0xd5, 0xfe, 0x4f, 0x19, 0xc8, 0x80, 0xbb, 0x2a, 0x2f,
	0xab, 0xf3, 0x29, 0xaf, 0x0f, 0x3a, 0x94, 0xce, 0xdb, 0x9c, 0xd3, 0xfc, 0x2d, 0xfa, 0xce, 0x49,
	0xde, 0x4e, 0x38, 0xd6, 0x1f, 0xef, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x86, 0x3b, 0xe7, 0xe5,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImageSvcClient is the client API for ImageSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageSvcClient interface {
	// Fetch
	Fetch(ctx context.Context, in *FetchInput, opts ...grpc.CallOption) (*ImageOutput, error)
	// Store
	Store(ctx context.Context, in *ImageInput, opts ...grpc.CallOption) (*ImageOutput, error)
}

type imageSvcClient struct {
	cc grpc.ClientConnInterface
}

func NewImageSvcClient(cc grpc.ClientConnInterface) ImageSvcClient {
	return &imageSvcClient{cc}
}

func (c *imageSvcClient) Fetch(ctx context.Context, in *FetchInput, opts ...grpc.CallOption) (*ImageOutput, error) {
	out := new(ImageOutput)
	err := c.cc.Invoke(ctx, "/impb.ImageSvc/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageSvcClient) Store(ctx context.Context, in *ImageInput, opts ...grpc.CallOption) (*ImageOutput, error) {
	out := new(ImageOutput)
	err := c.cc.Invoke(ctx, "/impb.ImageSvc/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageSvcServer is the server API for ImageSvc service.
type ImageSvcServer interface {
	// Fetch
	Fetch(context.Context, *FetchInput) (*ImageOutput, error)
	// Store
	Store(context.Context, *ImageInput) (*ImageOutput, error)
}

// UnimplementedImageSvcServer can be embedded to have forward compatible implementations.
type UnimplementedImageSvcServer struct {
}

func (*UnimplementedImageSvcServer) Fetch(ctx context.Context, req *FetchInput) (*ImageOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}
func (*UnimplementedImageSvcServer) Store(ctx context.Context, req *ImageInput) (*ImageOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}

func RegisterImageSvcServer(s *grpc.Server, srv ImageSvcServer) {
	s.RegisterService(&_ImageSvc_serviceDesc, srv)
}

func _ImageSvc_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageSvcServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/impb.ImageSvc/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageSvcServer).Fetch(ctx, req.(*FetchInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageSvc_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageSvcServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/impb.ImageSvc/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageSvcServer).Store(ctx, req.(*ImageInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "impb.ImageSvc",
	HandlerType: (*ImageSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _ImageSvc_Fetch_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _ImageSvc_Store_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "imsto.proto",
}
